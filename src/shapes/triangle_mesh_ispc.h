//
// /home/daniel/repos/polytope/src/shapes/triangle_mesh_ispc.h
// (Header automatically generated by the ispc compiler.)
// DO NOT EDIT THIS FILE.
//

#pragma once
#include <stdint.h>



#ifdef __cplusplus
namespace ispc { /* namespace */
#endif // __cplusplus

#ifndef __ISPC_ALIGN__
#if defined(__clang__) || !defined(_MSC_VER)
// Clang, GCC, ICC
#define __ISPC_ALIGN__(s) __attribute__((aligned(s)))
#define __ISPC_ALIGNED_STRUCT__(s) struct __ISPC_ALIGN__(s)
#else
// Visual Studio
#define __ISPC_ALIGN__(s) __declspec(align(s))
#define __ISPC_ALIGNED_STRUCT__(s) __ISPC_ALIGN__(s) struct
#endif
#endif


///////////////////////////////////////////////////////////////////////////
// Functions exported from ispc code
///////////////////////////////////////////////////////////////////////////
#if defined(__cplusplus) && (! defined(__ISPC_NO_EXTERN_C) || !__ISPC_NO_EXTERN_C )
extern "C" {
#endif // __cplusplus
    extern void simple(float hitx, float hity, float hitz, float pnx, float pny, float pnz, float * vertex, float * edge, bool * out, int32_t count);
    extern void soa2(float * vertex, float rayox, float rayoy, float rayoz, float raydirx, float raydiry, float raydirz, float * t, bool * inside, uint32_t yOffset, uint32_t zOffset, int32_t count);
    extern void soa_hit(const float * vx, const float * vy, const float * vz, const uint32_t * fv0, const uint32_t * fv1, const uint32_t * fv2, float rox, float roy, float roz, float rdx, float rdy, float rdz, float * t, uint32_t count);
#if defined(__cplusplus) && (! defined(__ISPC_NO_EXTERN_C) || !__ISPC_NO_EXTERN_C )
} /* end extern C */
#endif // __cplusplus


#ifdef __cplusplus
} /* namespace */
#endif // __cplusplus
