language: cpp

# CUDA stuff inspired by https://github.com/jeremad/cuda-travis/blob/master/.travis.yml

jobs:
  include:
    - os: linux
      env:
        - CUDA=cuda-10-2_10.2.89-1
        - CUDA_SHORT=10.2
        - UBUNTU_VERSION=ubuntu1804
      dist: bionic
      compiler: gcc
      before_install:
        # coveralls
        - pip install --user cpp-coveralls
        # repo meta
        - wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.2.89-1_amd64.deb
        - sudo dpkg -i cuda-repo-ubuntu1804_10.2.89-1_amd64.deb
        - wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
        - sudo apt-key add 7fa2af80.pub
        - sudo apt update -qq
        - sudo apt install -y cuda 
        - sudo apt clean
        - CUDA_HOME=/usr/local/cuda-10.2
        - LD_LIBRARY_PATH=/usr/local/cuda/lib64:${LD_LIBRARY_PATH}
        - PATH=/usr/local/cuda-10.2/bin:${PATH}
#        - wget https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-linux.zip
#        - unzip ninja-linux.zip
#        - PATH=${PATH}:${PWD}
      script:
        - mkdir cmake-build-debug
        - cd cmake-build-debug
        - cmake -DCOVERAGE=1 ../
        - cmake --build . -- -j2
        - ./runUnitTests
      after_success:
        - coveralls -r ../ -i "src/" --exclude "lib" --exclude "tests" --gcov-options '\-lp' --verbose
    - os: osx
      compiler: clang
      script:
        - mkdir cmake-build-debug
        - cd cmake-build-debug
        - cmake -DCOVERAGE=0 ../
        - cmake --build . -- -j2
          
#          http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-10-2_10.2.89-1_amd64.deb